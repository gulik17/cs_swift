//
//  PhotoRequest.swift
//  vkontakte
//
//  Created by Администратор on 23.01.2020.
//  Copyright © 2020 Home. All rights reserved.
//

import Foundation

struct PhotoRequest: Decodable {
    let request: PhotoData
}

struct PhotoData: Decodable {
    let items: [PhotoItem]
}

struct PhotoItem: Decodable {
    let sizes: [Size]
}

struct Size: Codable {
    let type: TypeEnum
    let url: String
    
    enum TypeEnum: String, Codable {
        case s = "s" //s — пропорциональная копия изображения с максимальной стороной 75px;
        case m = "m" //m — пропорциональная копия изображения с максимальной стороной 130px;
        case x = "x" //x — пропорциональная копия изображения с максимальной стороной 604px;
        case o = "o" //o — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 130px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева изображения с максимальной шириной 130px и соотношением сторон 3:2.
        case p = "p" //p — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 200px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 200px и соотношением сторон 3:2.
        case q = "q" //q — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 320px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 320px и соотношением сторон 3:2.
        case r = "r" //r — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 510px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 510px и соотношением сторон 3:2
        case y = "y" //y — пропорциональная копия изображения с максимальной стороной 807px;
        case z = "z" //z — пропорциональная копия изображения с максимальным размером 1080x1024;
        case w = "w" //w — пропорциональная копия изображения с максимальным размером 2560x2048px.
    }
}

extension PhotoRequest {
    func toPhotos() -> [Photo] {
        var photos = [Photo]()
        request.items.forEach { (item) in
            if let size = item.sizes.first(where: { $0.type == .x }) {
                photos.append(Photo(imageName: size.url))
            }
        }
        return photos
    }
}
